## interruption and signal
signal(int signum, sighandler_t handler);
sigaction
setitimer
ptrace
getitimer, setitimer - get or set value of an interval timer, ITIMER_REAL, ITIMER_VIRTUAL, ITIMER_PROF; usleep, sleep.
timer_create         - create a POSIX per-process timer, CLOCK_REALTIME, CLOCK_MONOTONIC, CLOCK_PROCESS_CPUTIME_ID, CLOCK_THREAD_CPUTIME_ID;
                        sigevent
sigaltstack          - set and/or get signal stack context  ???  sigaction

sched                - scheduling APIs
sched_setaffinity,  sched_getaffinity  -  set  and get a thread's CPU affinity mask, which CPUs a thread can use

pthread_sigmask - examine and change mask of blocked signals
sigprocmask, rt_sigprocmask - examine and change blocked signals
sigpending, rt_sigpending - examine pending signals
sigsuspend, rt_sigsuspend - wait for a signal by signal mask
sigwait - wait for a particular signal, better than signal handler
mq_notify - register for notification when a message is available, SIGEV_THREAD, SIGEV_SIGNAL

sigqueue,pthread_sigqueue
kill, killpg, tkill, tgkill

setjmp, sigsetjmp, longjmp, siglongjmp  - 
safe/restore the stack pointer, the instruction pointer, possibly the values of other registers and the signal mask
save signal mask? Different implementations of POSIX behave differently, read the specifications.

## Virtual memory ##
mmap brk sbrk
mprotect - set protection on a region of memory
mtrace, muntrace - malloc tracing
Valgrind

## IPC ##
### socket ###
socket()
setsockopt()
bind()
listen() if TCP
send
sendto
sendmsg
SSL_write   /* SSL connection */

### synchronazation ###
futex fast user-space locking, shared by mmap/shmat 

### async monitoring ###
select
poll
epoll  /* Linux */
kqueue(kevent)  /* FreeBSD */

## profiling ##
profil  (gprof toolkit)
strace  trace system calls and signals
getrusage - get resource usage, RUSAGE_SELF, RUSAGE_CHILDREN, RUSAGE_THREAD
times     - get process times
cat /proc/PID/...

## device ##
mknod, mknodat - create a special or ordinary file

fsync,  fdatasync  -  synchronize a file's in-core state with storage device

## process ##
int atexit(void (*function)(void))    int on_exit(void (*function)(int , void *), void *arg) Test Macro Requirements for glibc 

_exit() terminates the calling process "immediately", no registered termination functions are called. Test Macro Requirements for glibc
exit - cause normal process termination

The getauxval() function retrieves values from the auxiliary vector, a mechanism that the kernel's ELF binary loader uses to pass certain information to user space when a program is executed.

## utility ##
prctl - operations on a process

## portability ##
### Macro ###
Feature test macros
http://man7.org/linux/man-pages/man7/feature_test_macros.7.html
_POSIX_SOURCE
_BSD_SOURCE
_GNU_SOURCE
_XOPEN_SOURCE ???


